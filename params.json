{"name":"Machine Learning Final Project","tagline":"final project for CS578 2014fall","body":"Welcome to the website of the our Machine Learning Project :smile:\r\n\r\n# **Joint Sentiment Prediction via Review Text and Social Network Analysis**\r\n(*Cosmo Zhang, Bing Yu, Jiasen Yang, Ellen Lai*)\r\n\r\n## Pre-processing\r\n\r\n### Analysis\r\n* Yelp Dataset Challenge\r\n* Comprises 42,153 businesses, 320,002 business attributes, 31,617 check-in sets, 252,898 users, 403,210 tips, 1,125,458 reviews, as well as a social network consisting of 955,999 edges.\r\n* Focus on businesses with enough ratings among Scottsdale, Tempe, and Phoenix\r\n* We would consider 4-star and 5-star rating as positive, while 1-star and 2-star rating as negative.\r\n\r\n### Usercounts\r\n![Usercounts](https://github.com/cosmozhang/ml_final_project_yelp/blob/master/images/uzcounts.png?raw=true \"Usercounts\") \r\n### Bizcounts\r\n![Bizcounts](https://github.com/cosmozhang/ml_final_project_yelp/blob/master/images/bizcounts.png?raw=true \"Bizcounts\") \r\n\r\n## Naive Bayes Classifier\r\n### Intuition\r\n* Goal: To predict the user’s rating to a particular business individually\r\n* Available information: user’s ratings and reviews on other businesses, and business’s ratings and reviews from other users\r\n* Assumption: Independence among features given rating.\r\n\r\n### Probabilistic model\r\n* Rating:C = {+, −}, User U, Business B, Review feature R.\r\n* Basic model: P(C|U, B) = P(C) × P(U|C) × P(B|C) / P(U, B)\r\n\r\n### Results\r\n  | Accuracy | Recall | Precision | F-score\r\n--- | --- | --- | --- |---\r\nTestset | 87.97% | 97.77% | 89.74% | 93.59%\r\n\r\n\r\n### Future Orientation\r\n* Take into account common features of user’s review on other\r\nbusinesses and business’s review from other users\r\n* Advanced model: P(C|U, B, R) = P(C) × P(U|C) × P(B|C) × P(R|C) / P(U, B, R)\r\n\r\n##  Natural Language Processing\r\n### Dependency Tree\r\nThe Stanford dependencies provide a representation of grammatical relations between words in a sentence. They have been designed to be easily understood and effectively used by people who want to extract textual relations.\r\n\r\n* NLTK package for sentence tokenize for the entire review text in a\r\n(user-business) pair example.\r\n* Stanford CoreNLP package with a self-modified python module for\r\nsentence parsing\r\n\r\n### Parsed Sentence Example 1\r\n![deptree1](https://github.com/cosmozhang/ml_final_project_yelp/blob/master/images/deptree1.png?raw=true)\r\n\r\n### Parsed Sentence Example 2\r\n![deptree1](https://github.com/cosmozhang/ml_final_project_yelp/blob/master/images/deptree2.png?raw=true)\r\n\r\n### Dynamic Latent (Hidden) Conditional Random Field\r\nConditional random fields (CRFs) are a class of statistical modelling\r\nmethod often applied in pattern recognition and machine learning,\r\nwhere they are used for structured prediction.\r\n* Dynamic: The structures are variable among sentences in training\r\nexamples.\r\n* Latent (Hidden): Some labels are observable, while some are\r\nunknown.\r\n\r\n### From Tree Graph to Factor Graph\r\n![graph](https://github.com/cosmozhang/ml_final_project_yelp/blob/master/images/graph.png?raw=true)\r\n\r\n![factor](https://github.com/cosmozhang/ml_final_project_yelp/blob/master/images/factor.png?raw=true)\r\n\r\n### Known and Unknown Labels\r\n* y\u0005 is the root label of the entire tree, which has a known label propagated from the rating.\r\n* w◦s are the labels of nodes, which are the roots of subtrees, whose labels are unknown.\r\n\r\n### Belief Propagation Algorithm\r\nBelief propagation, also known as sum-product message passing is a message passing algorithm for performing inference on graphical models. It calculates the marginal distribution for each unobserved node, conditional on any observed nodes.\r\n\r\n![msgps1](https://github.com/cosmozhang/ml_final_project_yelp/blob/master/images/msgps1.png?raw=true)\r\n![msgps1](https://github.com/cosmozhang/ml_final_project_yelp/blob/master/images/msgps2.png?raw=true)\r\n![msgps1](https://github.com/cosmozhang/ml_final_project_yelp/blob/master/images/msgps3.png?raw=true)\r\n![msgps1](https://github.com/cosmozhang/ml_final_project_yelp/blob/master/images/msgps4.png?raw=true)\r\n\r\n### Breadth First Search\r\nBreadth first search (BFS) is a graph search algorithm that begins at the root node and explores all the neighboring nodes.\r\n* Then we can sort the nodes in a Topological Order (Levels) from the root.\r\n* Belief propagation first from root to all nodes.\r\n* Second from leaves to the root in a reversed order.\r\n\r\n### Features\r\nNode factors and edge factors have different features.\r\n* Node Factor: f(w_n), f(w_n, q_n), f(w_n, tag_n), f(w_n, word_n), f(w_n, q_n, r_n)\r\n* Edge Factor: f(w_n, w_n_h), f(w_n, w_n_h, r_n_h), f(w_n, w_n_h, r_n_h, q_n_h), f(w_n, word_n_h), f(w_n, word_n)\r\nw is the label, q is the polarity of word, tag is the part of speech tag,\r\nword is the stemmed form of the word.\r\n* q dictionary from Bin Liu.\r\n* r dictionary as a combination of “NotLw\" and “Decreas\" from inquirer.\r\n* word by NLTK snowball stemmer using English grammar\r\n\r\n### Maximum a Posteriori\r\n* objective function\r\n* partial derivative\r\n\r\n### Stochastic BFGS Optimization\r\nThe BFGS method approximates Newton’s method, a class of hill-climbing optimization techniques that seeks a stationary point of a (preferably twice continuously differentiable) function.\r\n* We ran it in a stochastic fashion for each parameter, in each factor, in each sentence, and in each example.\r\n* It converges very fast.\r\n\r\n### Majority Vote\r\n* We used the same belief propagation algorithm for inference, to get the label of the root of the tree, representing the polarity of the whole sentence.\r\n* Then we applied a simple majority vote on all the sentences in a review to get the predicated label of the entire review.\r\n\r\n### Final Result\r\nThe results were shown below after our algorithm ran 6 iterations on\r\nthe training set.\r\n\r\n  | Accuracy | Recall | Precision | F-score\r\n--- | --- | --- | --- |---\r\nValidation | 90.11% | 100.00% | 90.11% | 94.80%\r\nTestset | 88.99% | 100.00% | 88.99% | 94.17%\r\n\r\n## Social Network Analysis\r\n### Network Visualization \r\n![sonet](https://github.com/cosmozhang/ml_final_project_yelp/blob/master/images/sonet.png?raw=true)\r\n\r\n![DegreeDist](https://github.com/cosmozhang/ml_final_project_yelp/blob/master/images/DegreeDist.png?raw=true)\r\n\r\n### Network Statistics\r\n* |V| = 9186, |E| = 36737\r\n* Average degree: 14.877\r\n* Average path length: 3.281\r\n* Average clustering\r\n* coefficient: 0.342\r\n* Diameter: 10\r\n* Modularity: 0.396\r\n* Number of communities: 92\r\n\r\n### Rating/Sentiment Prediction\r\n\r\n* Intuition: Users’ rating behaviors are correlated with their friends’ rating behaviors (homophily and social influence).\r\n* Mathematically, user ui’s rating to business b_k is modeled\r\n* Augment edges by exploiting observed rating information.\r\n* Algorithm: Impute missing ratings by iteratively applying the model.\r\n\r\n### Finally\r\n![Thank-You](https://github.com/cosmozhang/ml_final_project_yelp/blob/master/images/Thank-You.png?raw=true)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}